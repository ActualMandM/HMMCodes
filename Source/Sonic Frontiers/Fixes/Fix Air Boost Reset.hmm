Code "Fix Air Boost Reset" in "Fixes" by "Hyper" does "Allows Sonic to perform another Air Boost after previously using it before performing a homing attack, stomp, or using a spring." 
//
    #lib "Bitwise"
    #lib "BlackboardStatus"
    #lib "Sonic"

    static Sonic.StateID[] AirBoostStates =
    {
        Sonic.StateID.StateStompingFlip,
        Sonic.StateID.StateStompingBounce,
        Sonic.StateID.StateHomingFinished,
        Sonic.StateID.StateSpringJump
    }

    static bool IsRestoredAirBoost = false;
//
{
    void NotifyAirBoostReset(Sonic.StateID stateId, Sonic.StateID[] stateStackTrace)
    {
        // Reset flag for StateAirBoost or StateSpinBoost.
        if (stateId == Sonic.StateID.StateAirBoost || stateId == Sonic.StateID.StateSpinBoost)
        {
            IsRestoredAirBoost = false;
            return;
        }

        foreach (var restoreState in AirBoostStates)
        {
            if (restoreState == stateId)
                IsRestoredAirBoost = true;
        }
    }

    Sonic.State.AddStateNotifyAction(NotifyAirBoostReset);

    if (BlackboardStatus.Get() != 0)
    {
        // Disable restored air boost for Super Sonic.
        if (BlackboardStatus.IsSuper())
            IsRestoredAirBoost = false;

        // Disable restored air boost for diving.
        if (Bitwise.Test(*BlackboardStatus.GetStateFlags(), (uint)BlackboardStatus.StateFlags.IsDiving))
            IsRestoredAirBoost = false;
    }

    if (Sonic.Input.IsPressed(Sonic.PlayerActionType.PlayerBoost) && !Sonic.IsGroundedSpecial() && IsRestoredAirBoost)
    {
        // Exit into StateAirBoost.
        Sonic.State.SetState(Sonic.StateID.StateAirBoost);
    }
}


