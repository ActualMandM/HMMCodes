Library "LevelInfo" by "Hyper, ĐeäTh & Sajid" 
{
    #include "Helpers" noemit

    #lib "GameDocument"

    using System.Runtime.InteropServices;

    /// <summary>
    /// A struct representation of `app::level::LevelInfo`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x100)]
    public struct Data
    {
        /// <summary>
        /// An array of pointers to `app::level::PlayerInformation` instances.
        /// </summary>
        [FieldOffset(0xC8)] UNMANAGED_FIXED_ARRAY(PlayerInformation*, PlayerInfo, 1)
    }

    /// <summary>
    /// A struct representation of `app::level::PlayerInformation`.
    /// </summary>
    [StructLayout(LayoutKind.Explicit, Size = 0x2F0)]
    public struct PlayerInformation
    {
        /// <summary>
        /// Determines if the current player is grounded.
        /// </summary>
        [FieldOffset(0x2EE)] public bool IsGrounded;
    }

    /// <summary>
    /// Gets an instance of `app::level::LevelInfo`.
    /// </summary>
    /// <example>
    /// <code><![CDATA[
    /// Code
    /// //
    ///     #lib "LevelInfo"
    /// //
    /// {
    ///     var pLevelInfo = LevelInfo.Get();
    /// }
    /// ]]></code>
    /// </example>
    /// <returns>A pointer to an instance of `app::level::LevelInfo`.</returns>
    public Data* Get()
    {
        return (Data*)GameDocument.GetService("LevelInfo");
    }
}